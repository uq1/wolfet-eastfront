//
// ETPub mod - Sample Server.cfg file
//
// Updated for ETPub 0.6.3
//
// NOTE: On ET versions older than 2.60 the .cfg file size limit may not allow
// you to use this file as a configuration.  If you have ET older than 2.60 and
// experience problems using this config, you shouls strip out the comments or
// use the uncommented sample .cfg file.


// *****************************************************************************
// * General ET Settings (non-ETPub mod) ***************************************
// *****************************************************************************

// NOTE:  It is recommended you set these three variables via the command line
// instead of through this file.  If you run into problems starting your server,
// you should move these commands to your command line before tyring anything
// else.  Your command line arguments might look like this (it is all one line,
// of course):
//
// +set fs_game etpub +set dedicated 2 +set net_ip 222.111.223.224
// +set net_port 27960 +exec config.cfg

// dedicated [integer]
// Strongly recommend you move this parameter to the command line as described
// above!
// 1 - Dedicated server for lan
// 2 - Dedicated server for internet
// [Default: 2]
//set dedicated 2

// net_ip [string]
// Set the IP address ET server uses
// Strongly recommend you move this parameter to the command line as described
// above!
// [Default: "localhost"]
//set net_ip "localhost"

// net_port [integer]
// Set port number ET server uses
// Strongly recommend you move this parameter to the command line as described
// above!
// [Default: 27960]
//set net_port 27960

// PASSWORDS & CLIENTS

// sv_maxclients [integer]
// Number of players, including private slots
// [Default: 20]
set sv_maxclients 20

// g_password [string]
// Any player joining will have to enter this password.  Leave blank for no
// password
// [Default: ""]
set g_password ""

// sv_privateclients [integer]
// If set > 0, then this number of client slots will be reserved for connections
// [Default: 0]
set sv_privateclients 0

// sv_privatepassword [string]
// Password to use for private client slots (sv_privateclients)
// [Default: ""]
set sv_privatepassword ""

// rconpassword [string]
// Remote console access password
// [Default: ""]
set rconpassword ""

// refereePassword [string]
// Referee password
// [Default: ""]
set refereePassword ""

// DL, RATE

// sv_maxRate [integer]
// The maximum bandwidth to use per connected player in (bytes per second).
// The higher the sv_maxrate, the better the gameplay, but more bandwidth is
// used.  10000 is probably the absolute minimum that should be used, but 13000
// and above makes for much better gameplay.  The maximum value for this setting
// is 25000.
// [Default: 0]
set sv_maxRate 13000

// sv_dl_maxRate [integer]
// The rate in bits per second for in-game file downloads.  The max value is
// 42000. This can make for very slow downloads (42000 bits per second equals
// 5.2 KB/s).  If you are hosting a server with custom maps, it is recommended
// you switch to HTTP or FTP downloads.
// [Default: 42000]
set sv_dl_maxRate 42000

// sv_allowDownload [0|1]
// Toggle all downloads. 0 Means turn off all downloads, 1 means downloads are
// enabled.
// [Default: 1]
set sv_allowDownload 1

// sv_wwwDownload [0|1]
// Enable alternate/redirected download method (FTP or HTTP). 0 means disabled,
// 1 means enabled. For a very thorough explanation of alternate download
// configuration, visit the following web site:
// http://www.rtcw.jolt.co.uk/content/enemy_territory/server_guide/redirect_downloads.html
// [Default: 0]
set sv_wwwDownload 0

// sv_wwwBaseURL [string]
// Base URL for redirected downloads (eg: "http://www.myclan.com/",
// "ftp://ftp.myclan.com", or "ftp://username:password@ftp.myclan.com/etfiles/"
// [Default: ""]
set sv_wwwBaseURL ""

// sv_wwwDlDisconnected [0|1]
// if 1, clients will download files while disconnected from the server.  If 0,
// clients will stay connected to the ET server while downloading files.
// [Default: 0]
set sv_wwwDlDisconnected 0

// sv_wwwFallbackURL [string]
// URL to send the client to if the file download fails.
// [Default: ""]
set sv_wwwFallbackURL ""

// sv_fullmsg [string]
// Server can give alternate messages to "server is full" by changing this cvar.
// This setting can also be configured to redirect a client to an alternate
// server by setting sv_fullmsg in the format "ET://host.to.redirect.to:port"
// [Default: "Server is full."]
set sv_fullmsg "Server is full."

// MOTD ETC

// sv_hostname [string]
// The name of your server as it will be displayed in the server listings. This
// setting should include any color markup you desire.
// [Default: "ETHost"]
set sv_hostname "ETHost"

// server_motd0 [string]
// through
// server_motd5 [string]
// The message of the day.  This is the block of text that appears on the bottom
// right hand corner between maps.  If you leave any server_motd message blank,
// the following server_motd lines will not display.
// [Default server_motd0: " ^NEnemy Territory ^7MOTD "
// [Default (Others): ""]
set server_motd0 " ^NEnemy Territory ^7MOTD "
set server_motd1 ""
set server_motd2 ""
set server_motd3 ""
set server_motd4 ""
set server_motd5 ""

// MISC SETTINGS

// g_heavyWeaponRestriction [integer]
// Heavy weapon and artillery restrictions.  For a thorough explanation of this
// setting, visit:
// http://www.rtcw.jolt.co.uk/content/enemy_territory/server_guide/weapons_restrictions.html
// [Default: 100]
set g_heavyWeaponRestriction 100

// g_antilag [0|1]
// Unlags players with slow pings
// [Default: 1]
set g_antilag 1

// g_altStopwatchMode [0|1]
// If enabled (value of 1), stopwatch mode runs in ABAB mode instead of ABBA.
// [Default: 0]
set g_altStopwatchMode 0

// g_autofireteams [0|1]
// If enabled, players will be automatically put into fireteams upon joining
// a game.
// [Default: 1]
set g_autofireteams 1

// g_complaintlimit [integer]
// A player will be kicked after this number of complaints. (A complaint occurrs
// when friendly fire is on, and a player kills a teammate.  The killed teammate
// has a chance to file a complaint after the team kill)
// [Default: 6]
set g_complaintlimit 6

// g_ipcomplaintlimit [integer]
// Similar to g_complaintlimit, this setting is the number of complaints FROM
// DIFFERENT IP ADDRESSES after which the offending player is kicked.  If the
// team-killing player kills many different teammates and they all file
// complaints, then this limit will be reached sooner than g_complaintlimit
// [Default: 3]
set g_ipcomplaintlimit 3

// g_fastres [0|1]
// If enabled, player is instantly active after being revived.
// [Default: 0]
set g_fastres 0

// g_friendlyFire [0|1]
// If enabled, players can shoot/harm their teammates.
// [Default: 1]
set g_friendlyFire 1

// g_disableComplaints [0|1]
// If enabled, team-killed players cannot file complaints against the teammate
// that killed them
// [Default: 0]
set g_disableComplaints 0

// g_gametype [integer]
// This should be set in the map rotation script. Sets the gametype:
// 2 - Objective
// 3 - Stopwatch
// 4 - Campaign
// 5 - LMS (Last Man Standing)
// [Default: 4]
//set g_gametype 4

// g_minGameClients [integer]
// The minimum number of players needed for a round to begin
// [Default: 8]
set g_minGameClients 8

// g_maxlives [integer]
// If set to a non-zero value, this is the maximum number of times a player can
// respawn.  If set to zero, there is no limit.
// [Default: 0]
set g_maxlives 0

// g_alliedmaxlives [integer]
// The maximum number of lives for a player on the allies team.  If set to a
// non-zero value, this value overrides the g_maxlives setting.
// [Default: 0]
set g_alliedmaxlives 0

// g_axismaxlives [integer]
// The maximum number of lives for a player on the axis team.  If set to a
// non-zero value, this value overrides the g_maxlives setting.
// [Default: 0]
set g_axismaxlives 0

// g_teamforcebalance [0|1]
// If enabled, players cannot join a team with more players than the other team.
// [Default: 0]
set g_teamforcebalance 0

// g_noTeamSwitching [0|1]
// If enabled, prevents a player from switching teams.
// [Default: 0]
set g_noTeamSwitching 0

// g_voiceChatsAllowed [integer]
// Limits the number of vsays a player can say within 30 (or so) seconds of each
// other
// [Default: 4]
set g_voiceChatsAllowed 4

// g_doWarmup [0|1]
// Enable or disable the warmup before a match
// [Default: 0]
set g_doWarmup 0

// g_warmup [integer]
// Warmup time in seconds.
// [Default: 60]
set g_warmup 60

// sv_pure [0|1]
// Checks to make sure that client file match those of the server.  This is a
// basic anti-cheat functionality.
// [Default: 1]
set sv_pure 1

// sv_minping [integer]
// Minimum ping (in milliseconds) a player must have to be able to connect to
// the server.  A value of 0 means no limit.
// [Default: 0]
set sv_minping 0

// sv_maxping [integer]
// Maximum ping (in milliseconds) a player must have to be able to connect to
// the server.  A value of 0 means no limit.
// [Default: 0]
set sv_maxping 0

// match_latejoin [0|1]
// If enabled, players can join a match after it has begun.
// [Default: 1]
set match_latejoin "1"

// match_minplayers [integer]
// Minimum number of players to start a match
// [Default: 4]
set match_minplayers 4

// match_mutespecs [0|1]
// If enabled, spectators cannot talk while a match is taking place
// [Default: 0]
set match_mutespecs 0

// match_readypercent [integer]
// The percentage of players that must be ready before a match can begin
// [Default: 100]
set match_readypercent 100

// match_timeoutcount [integer]
// The numbers of non-referee players can pause a match in progress.
// [Default: 3]
set match_timeoutcount 3

// match_warmupDamage [0|1]
// Enables friendly fire during the warmup.
// [Default: 1]
set match_warmupDamage 1

// team_maxplayers [integer]
// The maximum number of players that can join each team.  0 means no limit.
// [Default: 0]
set team_maxplayers 0

// g_speed [integer]
// Speed of the players.
// [Default: 320]
set g_speed 320

// g_gravity [integer]
// Gravity in the game.
// [Default: 800]
set g_gravity 800

// g_knockback [integer]
// The amount of knockback experienced when a player is shot.
// [Default: 1000]
set g_knockback 1000

// g_inactivity [integer]
// The length of time (in seconds) a player must be in a team and idle in order
// to get auto-kicked. (0 = Infinite)
// [Default: 0]
set g_inactivity 0

// g_spectatorInactivity 0
// The amount of time (in seconds) a spectator must be idle in order to get
// auto-kicked. (0 = Infinite)
// [Default: 0]
set g_spectatorInactivity 0

// VOTING

// g_allowVote [0|1]
// Enables players to call votes.
// [Default: 1]
set g_allowVote 1

// vote_limit [integer]
// Maximum number of votes per map.
// [Default: 5]
set vote_limit 5

// vote_percent [integer]
// Percent of all players that must vote yes for a vote to pass
// [Default: 50]
set vote_percent 50

// Allowed votes [0|1]
// [Default for vote_allow_referee, vote_allow_timelimit: 0]
// [Default for all others: 1]
set vote_allow_comp 1
set vote_allow_gametype 1
set vote_allow_kick 1
set vote_allow_map 1
set vote_allow_matchreset 1
set vote_allow_mutespecs 1
set vote_allow_nextmap 1
set vote_allow_pub 1
set vote_allow_referee 0
set vote_allow_shuffleteamsxp 1
set vote_allow_swapteams 1
set vote_allow_friendlyfire 1
set vote_allow_timelimit 0
set vote_allow_warmupdamage 1
set vote_allow_antilag 1
set vote_allow_balancedteams 1
set vote_allow_muting 1

// PUNKBUSTER

// sv_punkbuster is a readonly variable. Use +set sv_punkbuster on command line
// or use the command pb_sv_enable in the console.
//pb_sv_enable

//exec punkbuster.cfg  // Punkbuster Settings

// LOGGING

// g_log [string]
// Filename of the server log file.  "" disables logging to a log file
// [Default: "etserver.log"]
set g_log "etserver.log"

// logfile [integer]
// Console logging (the console log is a different file than the server log
// file specified by the g_log setting). If enabled, the file will be called
// etconsole.log.  These are the possible values:
// 0 - Console logging disabled
// 1 - Enabled
// 2 - Enabled and synchronized (recommended setting if you use etadmin_mod)
// [Default: 0]
set logfile 0

// MASTER SERVERS

// Unless you know what you are doing, do not change these.  These master server
// settings allow for maximum visibility of your new server
set sv_master1 "master3.idsoftware.com"
set sv_master2 "master0.gamespy.com"
set sv_master3 "wolfmaster.idsoftware.com"
set sv_master4 "clanservers.net"
set sv_master5 "etmaster.idsoftware.com"

// *****************************************************************************
// * ETPub Mod Settings ********************************************************
// *****************************************************************************

// g_shrubbot [filename]
// This should be set to the name of your shrubbot.cfg file if you want to
// enable shrubbot. See shrubbot documentation for more information about this
// file.
// Shrubbot functionality depends on punkbuster's GUID, so don't turn this on
// unless you have punkbuster enabled on your server.
// NOTE:  If g_shrubbot is set to "", then NONE OF THE ! COMMANDS WILL WORK!
// [Default: ""]
set g_shrubbot ""

// g_logAdmin [filename]
// The name of the file that all shrubbot commands will be logged to.
// [Default: ""]
set g_logAdmin ""

// g_hitsounds [integer]
// This is a bitflag cvar that supports the following values
// 1 - Enables hitsounds
// 2 - Disables hitsounds when shooting wounded players.
// 4 - Disable the headshot sounds when shooting wounded players in the head.
//     Default hitsound will be used in it's place unless the 2 flag is set.
// 8 - Disable the "hold your fire" sound that would normally be played when
//     shooting a teammate for the first time.
// 16 - Disable hitsounds from poison damage.
//
// A client will hear a sound when they damage another player. The sounds it
// uses are ones that are included in the pak0.pk3 file so it does not require
// additonal file downloads to use this mod.
//
// A client can disable hitsounds by running
// /setu cg_hitsounds 0
// before connecting to the server, or toggle hitsounds on the fly with the
// /hitsounds command.
// [Default: 0]
set g_hitsounds 0

// The hitsounds used are configurable with the following cvars:

// g_hitsound_default [filename]
// Hitsound for body shot.
// [Default: "sound/weapons/impact/flesh2.wav"]
set g_hitsound_default "sound/weapons/impact/flesh2.wav"

// g_hitsound_helmet [filename]
// Hitsound for hitting a player's helmet
// [Default: "sound/weapons/impact/metal4.wav"]
set g_hitsound_helmet "sound/weapons/impact/metal4.wav"

// g_hitsound_head [filename]
// Hitsound for headshots
// [Default: "sound/weapons/impact/flesh4.wav"]
set g_hitsound_head "sound/weapons/impact/flesh4.wav"

// g_hitsound_team_warn_axis [filename]
// Hitshound
// [Default: "sound/chat/axis/26a.wav"]
set g_hitsound_team_warn_axis "sound/chat/axis/26a.wav"

// g_hitsound_team_warn_allies [filename]
// Hitsound
// [Default: "sound/chat/allies/26a.wav"]
set g_hitsound_team_warn_allies "sound/chat/allies/26a.wav"

// g_hitsound_team_helmet [filename]
// Hitsound
// [Default: "sound/weapons/impact/metal4.wav"]
set g_hitsound_team_helmet "sound/weapons/impact/metal4.wav"

// g_hitsound_team_head [filename]
// Hitsound
// [Default: "sound/weapons/impact/flesh4.wav"]
set g_hitsound_team_head "sound/weapons/impact/flesh4.wav"

// g_hitsound_team_default [filename]
// Hitsound
// [Default: "sound/weapons/impact/flesh2.wav"]
set g_hitsound_team_default "sound/weapons/impact/flesh2.wav"

// g_shoveSound [string]
// The sound that a player emits when shoved. Set this to "" to disable it.
// [Default "sound/weapons/grenade/gren_throw.wav"]
set g_shoveSound "sound/weapons/grenade/gren_throw.wav"

// g_poisonSound [string]
// The sound that a poisoned player emits every second. Set this to "" to
// disable it.
// [Default: "sound/player/gurp2.wav"]
set g_poisonSound "sound/player/gurp2.wav"

// g_fightSound [string]
// The sound that will play at the end of warmup or when the match is unpaused.
// Example
// set g_fightSound "sound/world/rooster.wav"
// Set this to "" to disable it.
// [Default: ""]
set g_fightSound ""

// g_playDead [0|1]
// Allows players use the 'playdead' command and their character will act like
// it is dead until the playdead command is issued again (or they really die).
// [Default: 0]
set g_playDead 0

// g_shove [integer]
// Allows players to push other players with the "use" key. The integer adjusts
// the amount of force players shove with. 80 seems fair.
// NOTE: starting with etpub 0.5.1, this number has been changed to (hopefully)
// be more compatible with the value used in shrubet. You will need to turn down
// this value greatly when upgrading from earlier versions of etpub.
// [Defeault: 0]
set g_shove 0

// g_shoveNoZ [0|1]
// Set this to 1 if you want to disable shove in the up/down direction (a.k.a
// "boosting").
// [Default: 0]
set g_shoveNoZ 0

// g_dragCorpse [0|1]
// Allows players do drag wounded players with the use key when moving backward
// slowly. Works best when crouching or prone.
// [Default: 0]
set g_dragCorpse 0

// g_classChange [0|1]
// Allows players to take the class of a gibbed teammate temporarily similarly
// to how a covert steals a uniform. Class changing does not latch, so the
// original class the player had will be restored on respawn.
// [Default: 0]
set g_classChange 0

// g_forceLimboHealth [0|1]
// If set to 0 it takes about 3 shots to gib a wounded player, if set to 1 it
// takes about 5.
// [Default: 1]
set g_forceLimboHealth 1

// g_privateMessages [0|1]
// If set to 1, players can send private messages to one another with the m
// command. Example:
// /m tjw you totally suck!
// Players can also type '/m tjw you totally suck' in the 'chat' dialog box and
// it will be recognized as a private message.
// Starting in 0.2.1 players can also type '/m tjw you totally suck' in the
// 'chat' dialog box and it will be recognized as a private message.
// Starting in 0.5.1, clients can reject private message from other individual
// clients with the /ignore client command.
// [Default: 0]
set g_privateMessages 0

// g_XPSave [bitmask]
// This is a bitflag with the following values (Add the desired values up to set
// your options):
// 1 - Store xp when a client disconnects
// 2 - Don't reset xp to the pre-map start values on a map restart, shuffle,
//     etc.
// 4 - Never reset xp (ever).
// 8 - Force the disconnection of clients with the same GUID as the connecting
//     client. This is useful in saving the stored XP of players with unreliable
//     network connections since they should still get their stored XP even if
//     reconnecting immediately with a new IP address. This feature is enabled
//     by default unless you have sv_wwwDlDisconnected enabled.
//     sv_wwwDlDisconnected seems to interfere with this feature, so do not
//     enable this flag if you change pk3's on your server often because stored
//     XP will be lost over disconencted downloads.
//
// Storing XP on disconnect depends on the punkbuster guid, so don't turn this
// on unless you have punkbuster enabled on your server.
// [Default: 0]
set g_XPSave 0

// g_XPSaveFile [string] 
// Set this to the filename you want XPSave to store data in. This file will 
// be relative to your fs_game directory (like g_shrubbot). 
// [Default: "xpsave.cfg"]
set g_XPSaveFile "xpsave.cfg"

// g_XPSaveMaxAge_xp [integer] 
// The number of seconds that must pass without a connection from this
// player before XPSave forgets his/her xp skills.
// 
// NOTE: if g_XPSaveMaxAge is less than g_XPSaveMaxAge_xp, g_XPSaveMaxAge
//       will be used! 
// 
// [Default: 86400] (a.k.a 1 day) 
set g_XPSaveMaxAge_xp 86400

// g_XPSaveMaxAge [integer] 
// The number of seconds that must pass without a connection from this
// player before XPSave forgets his/her xp/killrating/playerrating/mute status.
// 
// [Default: 604800] (a.k.a 1 week) 
set g_XPSaveMaxAge 604800

// g_XPDecay [integer]
// This is a bitmask that controls the XP decay feature. The following bitflags
// are supported:
// 1 -  Enable XP Decay
// 2 -  Do not decay a player's XP when they are disconnected from the server.
// 4 -  Do not decay a player's XP for the class they are currently playing as
//      (e.g. Medic).
// 8 -  Do not decay a player's XP while they are spectating.
// 16 - Do not decay a player's XP during warmup/intermission.
// 32 - Do not decay a player's XP when he/she is playing. This means that they
//      are on a Allies or Axis and the game is active.
// 64 - Do not decay a player's Battle Sense XP when he/she is playing. 
// 128 - Do not decay a player's Light Weapons XP when he/she is playing. 
// See also g_XPDecayRate.
// This feature was created in response to the g_XPSave 4 flag which allows XP
// to continue building forever.
// [Default: 0]
set g_XPDecay 0

// g_XPDecayRate [float]
// This is the rate (in skillpoints per second) that XP skill points for each
// skill will decay when g_XPDecay is enabled.
// Setting this to 0.1 would result in a player losing 6 points per minute IN
// ALL SKILLS, so up to 42XP per minute if the player has skill points for each skill.
// [Default: 0.0]
set g_XPDecayRate 0.0

// g_XPDecayFloor [float]
// This is the minimum that any particular skill can be reduced to by
// g_XPDecay.
// For example, setting this to 140.0 will ensure that no player will
// ever lose rank or skill levels due to g_XPDecay.
// [Default: 0.0]
set g_XPDecayFloor 0.0

// g_maxXP [integer]
// This is a vicious cvar that will reset a players XP once their overall
// XP score reaches it. It has been requested by those who run servers with
// XPSave that never resets. 
// Set this to -1 to disable it. 
// [Default: -1]
set g_maxXP -1

// g_damageXP [0|1|2]
// Optionally enables the awarding of XP based upon the amount of damage
// a player has done to the opposing team.
// Available options are:
// 0 - disabled: use normal ET XP awarding methods
// 1 - 1 point of XP is awarded per g_damageXPLevel points of damage done.
//     The XP is placed in the skill category of the weapon used.
//	 When this mode is enabled, kills (regardless of method) are awarded 
//	 a fixed value of 1 point of XP.
// 2 - 1 point of XP is awarded per g_damageXPLevel points of damage done.
//	 The XP is placed in the Battle Sense category.  
// 	 Normal XP amounts are awarded for kills (typically 3-5 XP).
// [default: 0]
set g_damageXP 0

// g_damageXPLevel [integer]
// This setting determines the amount of damage that a player must do to earn
// 1 point of XP.  See g_damageXP for additional information.
// [default: 50]
set g_damageXPLevel 50

// g_weapons [bitmask]
// This is meant to match the shrubmod g_weapons cvar, but so far the only
// implemented flags are:
// 2 - Syringes work underwater
// 4 - Pliers work underwater
// 8 - Fully restore Field ops charge bar if airstrike is aborted
// 16 - Half restore FIeld ops charge bar if airstrike is aborted
// 32 - Ammo packs restore helmets
// 64 - Drop binoculars if player has them (requires etpub_client >= 20050927
//      or /weapons/binocs.weap in a pk3 downloaded to the client)
// 128 - Soldiers with level 4 heavy weapons don't lose their pistols
// 256 - Garands can reload when not clip is not empty
// 512 - Balance the clip size between the allies and axis rifles. allied rifles
//       get same clip sizes and max ammo as the k43.
//1024 - Creates a hitbox for mortar shells.  This reduces (or eliminates 
//	   in some cases) the ability to fire mortars through smaller 
//	   windows and bunker slits.  
// [Default: 0]
set g_weapons 0

// g_goomba [integer]
// If set to a positive integer, players can damage each other by landing on
// each other. The integer is multiplier that determines how much damage should
// be done to the player that was fallen on. Also the impact for the falling
// player will be broken so that they only recieve 20% of the damage they would
// have normally. It is also possible to do small amounts of damage (5HP) to
// other players by hopping up and down on them.
// Falling damage can be either 500, 50, 25, 15, or 10 depending on the length
// of the fall. So if you set g_goomba to 5 and land on a player from a fall
// that would have damaged you 10HP, you will inflict 50HP of damage on the
// player you land on, and you will only recieve 2HP of damage.
// See also g_goombaFlags
// Set this to 0 to disable it
// [Default: 0]
set g_goomba 0

// g_goombaFlags [integer]
// This is a bitflag cvar that controls the way g_goomba is handled. Currently
// the following flags are supported:
// 1 - Cannot do goomba damage to teammates
// 2 - Short falls (hopping) on another player does no damage.
// 4 - Short falls (hopping) does no damage to teammates. (not necessary if 1 or
//     2 flag is set)
// 8 - Falling player recieves no damage when landing on any other player.
//     (default is to recieve 20% of the damage the fall would have given if not
//     landing on a player).
// 16 - Insta-gib goomba. All goomba damage will be 500HP regardless of fall
//      distance. The exception is hopping on anther player which still does 5HP
//      of damage.
// Set this to 31 to have g_goomba work like shrubet.
// [Default: 0]
set g_goombaFlags 0

// g_spinCorpse [0|1]
// Allow players to use +left and +right binds to spin their corpse when dead or
// playing dead.  Clients can bind a key by typing this into their console:
// "/bind leftarrow +left" and so on.
// [Default: 0]
set g_spinCorpse 0

// g_teamChangeKills [1|0]
// If set to 0, players are allowed one non-killing team change per respawn
// cycle. If a player changes teams, he will be instantly spawned in the other
// teams default spawn point. Players will die (but not lose a life) if they
// change teams a second time in one spawn cycle.
// [Default: 1]
set g_teamChangeKills 1

// g_ATB [0|1|2]
// g_ATB_diff [integer]
// g_ATB controls the type of active team balancing you want to use. Active
// team // balancing will automatically move one of the top three player(s)
// from the team more likely to win, to the team more likely to lose. There are
// currently two versions. One uses XP, the other playerrating. Set g_ATB to 
// choose between them. Note that g_ATB only decides WHEN to move a player, and
// NOT which player to move. See g_ATB_rating to see how ATB chooses
// which player to move.
// 0
// No active team balancing.
// 1
// Use team XP to balance the teams. Uses the following cvars:
//   g_ATB_minXP [integer]
//   g_ATB_minPlayers [integer]
//   g_ATB_axisHoldoff [integer]
//   g_ATB_alliedHoldoff [integer]
//   Active Team Balance watches the team XP during the match and will force the
//   top player of the dominant team to switch teams when his/her team hits it's
//   respawn time if the following criteria is met:
//   1. One team has at least g_ATB_minXP (default 300) team XP.
//   2. There are at least g_ATB_minPlayers (default 5) players playing
//   3. The resulting team change will not give one team an advantage by number of
//      players unless:
//      A. If 16 or more people are playing, the losing team may get up to a 1
//         player advantage.
//      B. If 26 or more people are playing, the losing team may get up to a 2
//         player advantage.
//   4. The winning team is ahead in team XP by a margin of g_ATB_diff
//      percent.
//   For example, setting
//   g_ATB_diff 50
//   A player would be moved if he/she was the top player on the team and his/her
//   team had 750XP and the other team had 500XP.
//   You can also adjust the rate at which ATB moves players with the
//   g_ATB_axisHoldoff (default 5) and g_ATB_alliedHoldoff (default 5) cvars.
//   For example, if g_ATB_axisHoldoff is set to 5 and an axis player is moved to
//   the allied team, ATB will take no other action until the axis spawn timer
//   cycles 5 times.
//   NOTE: this calculation is based on TeamXP NOT the total XP of all the players
//   on the team. TeamXP is the total score earned for the team by all players on
//   the team during the map. When a player changes teams, the TeamXP they earned
//   for their team does not move with them.
//
// 2
// Use player rating to balance the teams. This will balance the teams by
// moving one of the the top 3 players when the probability of one team winning
// exceeds g_ATB_diff. g_ATB_diff is an integer and defaults
// to 75 meaning 75%. If the Axis team has more than a 75% chance of winning,
// ATB will move one of its players to the Allies, and this will often instantly
// lower the probability enough that another move will not be necessary. This
// version will not use any of the XP version's variables and it uses
// g_playerRating_minplayers
// instead of g_ATB_minPlayers as the minimum number of players that must
// be playing before it will act. It will also not swap players between teams
// since unbalanced team numbers is fine with player rating. It will actually
// stack team numbers on purpose to even out the teams unless g_ATB_awap is
// set.
//
// Note: Read g_teamForceBalance_playerrating carefully also. You probably
// don't want to turn option 2 on until after running your server long enough
// to learn map and player stats.
//
// Note: you must set g_ATB_rating to 4 and g_shuffle_rating to 4 if you use
// g_ATB 2 or ATB will by hyperactive and ineffective
//
// See also g_teamForceBalance_playerrating.
//
//   [Default g_ATB: 0]
//   [Default g_ATB_diff: 75]
//   [Default g_ATB_minXP: 300]
//   [Default g_ATB_minPlayers: 5]
//   [Default g_ATB_axisHoldoff: 5]
//   [Default g_ATB_alliedHoldoff: 5]
set g_ATB 0
set g_ATB_diff 75
set g_ATB_minXP 300
set g_ATB_minPlayers 5
set g_ATB_axisHoldoff 5
set g_ATB_alliedHoldoff 5

// g_ATB_swap [1|0]
// If set to 1, one of 3 loweset scoring players on the losing team will be
// moved to the winning team when ATB acts (unless the losing team has less
// players).
// [Default: 1]
set g_ATB_swap 1

// g_ATB_rating [integer]
// Sets the rating system used by Active Team Balance. The following options are
// supported:
// 1 - Use player XP
// 2 - Use the rate at which players have gained XP since connecting.
// 3 - Use the killRating (g_killRating must be nonzero)
// 4 - Use the playerRating (g_playerRating must be nonzero)
// [Default: 3]
set g_ATB_rating 3

// g_shuffle_rating [integer]
// Sets the rating system used by shuffle. The following options are supported:
// 1 - Use player XP
// 2 - Use the rate at which players have gained XP since connecting.
// 3 - Use the killRating (g_killRating must be nonzero)
// 4 - Use the playerRating (g_playerRating must be nonzero)
// [Default: 3]
set g_shuffle_rating 3

// g_mapConfigs [string]
// When a new map starts, load the map specific config file named [mapname].cfg
// in the folder [string]. For example if you set g_mapConfigs to 'mapcfg', when
// the map fueldump starts, the server will try to exec 'mapcfg/fueldump.cfg'.
// Set this to "" to disable it.
// Set this to "." to look for the cfg file in the current directory
// (fs_home_path).
// [Default: ""]
set g_mapConfigs ""

// g_packDistance [integer]
// Set the distance at which health packs and ammo packs are thrown. Set this to
// 0 to make it just like etmain. The settings should be similar to shrubet so
// set this to 2 for a subtle improvement.
// [Default: 0]
set g_packDistance 0

// g_dropHealth [integer]
// If set to a positive integer, medics will drop [integer] number of health
// packs when they are gibbed. If set to -1, medics will drop the number of
// health packs that they could have dropped at the moment of their death. Set
// this to 0 to turn it off.
// [Default: 0]
set g_dropHealth 0

// g_dropAmmo [integer]
// If set to a positive integer, fieldops will drop [integer] number of ammo
// packs when they are gibbed. If set to -1, fieldops will drop the number of
// ammo packs that they could have dropped at the moment of their death.
// Set this to 0 to turn it off.
// [Default: 0]
set g_dropAmmo 0

// g_tossDistance [integer]
// Set the velocity at which health or ammo packs are tossed from the dead body
// when g_dropHealth or g_dropAmmo are activated. This changes the distance that
// these packs travel from the corpse.
// [Default: 0]
set g_tossDistance 0

// g_logOptions [integer]
// This is meant to match the shrubmod g_logOptions cvar, but so far the only
// implemented flag is:
// 1    - Use server-side obituaries displayed in chat instead of cpm. Will
//        increase bandwidth usage. This will not have any effect unless
//        g_obituary is set to 3.
// 2    - Adrenaline countdown displayed
// 4    - Disable display of tap-out confirmation box
// 8    - Display connection attempts by banned players
// 16   - Display gib reports ("<victim> was gibbed by <attacker>")
// 32   - Omit "item" lines from log file
// 128  - GUIDs are logged in the game log
// 256  - Log all private messages (/m commands)
// 512  - Logs the real time into logs, instead of the normal uptime of the
//        server
// 2048 - Print TK death message like a normal kill message, stating killing
//        weapon, except it is preceeded by a red TEAMKILL: identifier.  Only
//        works if g_obituary is set to 3.
// [Default: 0]
set g_logOptions 0

// g_censor [string]
// [string] is a comma delimited string of words that will be sensored from
// chat.
// [Default: ""]
set g_censor ""

// g_censorNames [string]
// A comma delimited string of words that will be censored from player names.
// [Default: ""]
set g_censorNames ""

// g_censorPenalty [integer]
// This is a bitflag that currently supports the following flags:
//   1 - Kill the player
//   2 - Kick players with names containing words in g_censorNames
//   4 - Kill, but don't gib
//   8 - Auto-mute for g_censorMuteTime [60] seconds.
// [Default: 0]
set g_censorPenalty 0

// g_censorMuteTime [integer]
// The number of seconds to auto-mute as a censor penalty. Only works if bitflag
// 8 is added to g_censorPenalty.
// [Default: 60]
set g_censorMuteTime 60

// g_intermissionTime [integer]
// Set the length of time the end of game screens displays before loading the
// next map. The client will still countdown from 60 to 0 no matter what this is
// set to. Set this to 60 for default behaviour.
// [Default: 60]
set g_intermissionTime 60

// g_intermissionReadyPercent [integer]
// The percent of connected players who need to hit the "READY" button to move
// on to the next map without waiting g_intermissionTime to run out. Set this to
// 100 for default behaviour.
// [Default: 100]
set g_intermissionReadyPercent 100

// g_skills [bitmap]
// This is a bitflag cvar that currently supports the following flags:
//   1 - Players with level 4 battle sense can spot landmines for teammates.
//   2 - Players with level 4 engineering can keep the flak jacket for other
//       classes.
//   4 - Players with level 4 first aid can keep adrenaline for other classes.
// [Default: 0]
set g_skills 0

// g_hitboxes [integer]
//   This is a bitflag cvar that currently supports the following flags:
//   1 - Lower the standing player's body hitbox to the shoulders.
//   2 - Lower the crouching player's body hitbox to the shoulders.
//   4 - Lower the wounded player's body hitbox to a reasonable height
//   8 - Lower the prone player's body hitbox to a reasonable height
//   16 - Lower the playdead player's body hitbox to a reasonable height
// The default is 31 which means use all of the improved hitboxes. Set it to 0
// to use the unmodified hitboxes from etmain.
// See http://et.tjw.org/etpub/hitboxes/ for comparision screen shots.
// [Default: 31]
set g_hitboxes 31

// g_skipCorrection [1|0]
// Set this to 1 to enable Neil Toronto's unlagged2 skip correction. This will
// smooth out the movement of players with high packet loss (to a degree).
// This is similar to etpro's antiwarp, but has some differences. Neil likes
// this version better, bani likes his better.
// This replaces g_smoothClients from etmain.
// You can find a demo that shows g_skipCorrection in action at:
// http://et.tjw.org/etpub/skipCorrection/
// [Default: 1]
set g_skipCorrection 1

// g_maxWarp [integer]
// This allows you to control the amount of "warping" that players with high
// packet loss can do. The [integer] is the number of server frames that you
// allow a player to miss before their next movement is put in check.
//
// A server frame is 50ms on a typical server (sv_fps set to 20). This means
// that if you set g_maxWarp to 5 you won't allow players to warp from point
// A to point B if that distance takes an normal player 1/4 of a second to
// travel. Setting this to 1 is a good way to drive off just about everyone from
// your server.
//
// As far as I can tell, 1000ms is allowed by default in the game, so setting
// this to any value higher than 39 should have no effect if sv_fps is set to
// 10.
//
// You can find a demo that shows g_maxWarp in action at:
// http://et.tjw.org/etpub/skipCorrection/
// [Default: 4]
set g_maxWarp 4

// g_teamDamageRestriction [integer]
// When greater than 0, anybody that has this percentage of hits
// inflicted on a teammate will automatically be kicked. A minimum of g_minhits
// hits total required before this is calculated. Client can see current stats
// for themselves by doing a /damage in console. Implemented to mimic shrub
// behavior as much as is possible, there are other ways to implement this
// feature, which may be implemented in addition to current manner.
// [Default: 0]
set g_teamDamageRestriction 0

// g_minHits [integer]
// Minimum number of damaging hits required before calculating if
// player has reached g_teamDamageRestriction threshold. Flamethrower and
// landmine hits are adjusted similar to shrub. Medics get -2 hits for every
// revive.
// [Default: 6]
set g_minHits 6

// g_autoTempBan [0|1]
// When set, anyone kicked because of the g_teamDamageRestriction setting will
// be temporarily banned for g_autoTempBanTime seconds
// [Default: 0]
set g_autoTempBan 0

// g_autoTempBanTime [integer]
// The number of seconds kicked for when g_autoTempBan is set
// [Default: 1800]
set g_autoTempBanTime 1800

// g_voting [integer]
// This is a bitflag cvar that supports the following flags:
// 1 - Votes will pass on the number of votes cast rather than total eligible
//     voters.
// 2 - Votes that pass do not count against the vote_limit for the caller.
// 4 - " (called by NAME)" is appended to the vote description where NAME is the
//     name of the player that called the vote.
// [Default: 0]
set g_voting 0

// g_poison [integer]
// Gives medics the ability to poison enemies by sticking with their medic
// syringe. Enemies will be damaged at g_poison/second when g_poison is set to
// a value more than 0. Setting to 0 will disable poison needles. Primitive
// shake added to destabilize player being poisoned
// [Default: 0]
set g_poison 0

// g_poisonFlags [integer]
// This bitflag cvar controls the effects of g_poison. The following flags are
// supported:
// 1 - Poisoned player's screen shakes.
// 2 - Other players see the poisoned player's head shaking.
// 4 - Poisoned player appears to bend over (hurl) every 2 seconds. (poisoned
//     player does not see this happen.)
// 8 - Poisoned player cannot use +attack. NOTE: because of client side
//     prediction, the client may see the gun firing occasionally if they hold
//     down +attack, but no shots are fired.
// 16 - Poisoned player is disoriented (view turned upside down).
// [Default: 7]
set g_poisonFlags 7

// g_slashKill [bitmask]
// Default (0) Bitmask that controls the behavior of the /kill command.
// Currently, only the 8 flag is implemented
// 1 - Player spawns with half charge bar after /kill
// 2 - Player spawns with 0 charge bar after /kill
// 4 - Restores the charge bar to the same state it was in at the moment the
//     player issued /kill (regardless of how long they were in limbo)
// 8 - Disables /kill command
// 16 - Disable /kill when player is poisoned
// See also g_fear
//[Default: 0]
set g_slashKill 0

// g_spectator [integer]
// This is a bitmask that controls spectator behaviour. It supports the
// following flags:
// 1 - When in freelook mode, you can 'fire' at a player to follow. If you miss
//     a player, nothing happens.
// 2 - When in freelook mode with the 1 flag set, if you shoot and miss you
//     start following the next available player.
// 4 - When the player you're following goes into limbo, don't move to the next
//     available player.
// 8 - When the player you're following goes into limbo, go to freelook instead
//     of following the next available player. (4 has precedence)
// [Default: 0]
set g_spectator 0

// g_medics [bitmask]
// Bitmask to control various aspects of the medic, to nerf or otherwise change\
// their behavior. Currently supported flags include:
// 1 -   Medics can't pick up their own health packs to cure themselves of poison
//       needle effects
// 2 -   Medics can't pick up their own health packs at all
// 16-   Medics do not spawn with akimbo pistols, regardless of light weapons
//       skill level
// 32-   Medics do not spawn with SMG, nor can they pick one up.  However, any
//       class can steal a medics uni, if g_classChange is set to 1,
//       and receive the medic benefits while retaining their current weapons,
//       akimbos and SMG included
// 64-   Medics can use syringes to heal living teammates as an alternative
//       to the tk/revive cycle.
// [Default: 0]
set g_medics 0

// g_medicHealthRegen [integer]
// The rate at which medics regenerate health (in HP per second).  This rate is divided
// into two parts:  The first is from 1 to 110-125 HP (depending on the number of
// medics per team), and then above that.  The system default is 3/2 (3 HP per second,
// then 2 HP per second).
// Possible values are:
// 0 - 3/2
// 1 - 2/2
// 2 - 2/1
// 3 - 2/0
// 4 - 1/1
// 5 - 1/0
// 6 - 0/0 (no health regeneration)
// [Default: 0]
set g_medicHealthRegen 0

// g_coverts [bitmask]
// Bitmask to control various aspects of the CovertOps class
// Currently supported flags include:
//  1 - Level 4 Coverts have increased accuracy with scoped weapons
//  2 - Disguised coverts can only be identified with the "crosshair name"
//      by level 4 Field Ops. (requires etpub_client >= 20051016) 
//  4 - After detonating a satchel charge, the primary weapon will be 
//      selected instead of satchel again. (requires etpub_client >= 20051016) 
//  8 - Coverts in disguise take half the normal combat damage.
// 16 - Covert ops when wearing a stolen opposition uniform take no
// 	  damage from exploding weapons.
// 32 - Covert ops do not automatically lose their uniform if an enemy sees
//      them fire a weapon.
// 64 - Covert ops do not automatically lose their uniform if they fire a
//      a non-silent weapon.
// 128 - Covert ops do not automatically lose their uniform if they attach
//       to an emplaced gun.
// [Default: 0]
set g_coverts 0

// g_truePing [0|1]
// Allows players to see the true amount of time it takes until their actions
// are processed on the server. Pings will show around 50 ms higher than normal,
// but it's more accurate. Shows in the scoreboard.
// [Default: 0]
set g_truePing 0

// g_dropObj [integer]
// Sets the number of times a player can drop/toss the objective (e.g. parts on
// radar) per life.
// The parts are dropped by pressing the +activate key (usually bound to F) when
// there's nothing else around to be activated.
// Before enabling this recall how spammy the voiceovers can be. Then picture a
// player tossing the parts to himself over and over again. For this reason you
// probably don't want to set this very high.
// Starting in 0.4.4 players must switch to knife in order to drop the
// objective. If they are not holding knife and hit +activate they will see a
// message that notifies them that they must switch to knife. This change was
// made to prevent accidental dropping of the objective when trying to push,
// drag, pick up, or activate something else.
// [Default: 0]
set g_dropObj 0

// skill_soldier [string]
// skill_medic [string]
// skill_engineer [string]
// skill_fieldops [string]
// skill_covertops [string]
// skill_battlesense [string]
// skill_lightweapons [string]
// These variables allow customization of the experience points necessary to go
// up in ranks.  These settings consist of four space-separated integers
// indicating the number of XP required to go up a rank.  A string such as
// "3 10 10 10" indicates that 3 points are required to go up the first rank,
// and the next three ranks are granted when the players has 10 points.  If, for
// example, you want to grant akimbo pistols upon the first kill, you would set
// skill_lightweapons to "3 3 3 3".
// [Default (all): "20 50 90 140"]
set skill_soldier "20 50 90 140"
set skill_medic "20 50 90 140"
set skill_engineer "20 50 90 140"
set skill_fieldops "20 50 90 140"
set skill_covertops "20 50 90 140"
set skill_battlesense "20 50 90 140"
set skill_lightweapons "20 50 90 140"

// g_serverInfo [integer]
// Use this cvar to change the behaviour of the 'serverinfo' string. This string
// is printed in response to the 'getstatus' primative command used by game
// browsers. This is a bitflag cvar that currently accepts the following flags:
// 1 - Display player team information using the 'P' cvar in the server info
//     string. (etpro and etmain 2.60 behaviour)
// 2 - Display player team information using the 'Players_Axis' and
//     'Players_Allies' cvars in the server info string.
// 4 - Display the 'campaign_maps' cvar in the server info string. This contains
//     a comma delimited list off all the maps in the current campaign. Only
//     works if you have g_gametype set to 4.
// 8 - Displays campaign status info, giving number of current map, and total
//     maps in current campaign, in form of xx,yy (i.e. 4,10) for when playing
//     map 4 of a 10 map campaign.  Uses the cvar C
// 16 - Starting with 0.5.1, the class charge times will not be present in the
//      serverInfo string unless this flag is set. They were removed by default
//      in order to make room in the server info string for more useful
//      information. These cvars are g_medicChargeTime, g_engineerChargeTime,
//      g_LTChargeTime, g_covertopChargeTime, g_soldierChargeTime.
// NOTE: this cvar MUST be set prior to loading the first map. You will not be
// able to change this cvar once the game code is loaded.
// NOTE: the serverInfo string has a fixed length of 1024 characters. This space
// is shared with any cvar you create on your server with the 'sets' command.
// If you use up too much space with 'sets', your server will fail to start. It
// will print the message "Info string length exceeded" if you don't have enough
// space left in your serverinfo string to handle the g_serverInfo flags you've
// selected. To fix this, either remove some sets cvars from your config, or use
// different g_serverInfo flags.
// [Default: 1]
set g_serverInfo 1

// g_killRating [integer]
// g_killRating is a bitflag variable.
// When not set to 0 etpub will track a player's killing ability using an ELO
// type statistic similar to chess. Each kill will increase a player's kill
// rating based on how hard the kill was. Killing unskilled players will result
// in very few points whereas an unskilled player killing a skilled player will
// result in more points. Kill rating also takes into account the weapon used
// (less for arty, more for knife).
// Here are the bitflag options:
// 1 - Use kill rating. A dummy flag since any non-zero value for g_killRating
//     will enable it.
// 2 - Make kill rating visible. Players can use /killrating and at the end of
//     each map a message will display the top killers for the map and overall.
// See also g_ATB_rating.
// See also g_shuffle_rating.
// [Default: 3]
set g_killRating 3

// g_playerRating [integer]
// g_playerRating is a bitflag variable.
// When not set to 0 etpub will track a player's ability to win against good
// teams using an ELO type statistic similar to chess. Each win will increase
// a player's rating based on how hard the opposing team was. Skilled teams
// defeating less skilled teams will result in very few points whereas a
// relatively low-rated team defeating a good team will result in more points.
// Player rating also takes into account the number of players on each team
// (less points when a very large team defeats a small one) and which side
// tends to win more often on the current map (Allies tend to win tc_base).
// Here are the bitflag options:
// 1 - Use player rating. A dummy flag since any non-zero value for g_playerRating
//     will enable it.
// 2 - Make player rating visible. Players can use /playerrating and at the end
//     of each map a message will display the top player.
// See also g_ATB_rating.
// See also g_shuffle_rating.
// See also g_teamForceBalance_playerrating
// [Default: 3]
set g_playerRating 3

// g_playerRating_minplayers [integer] 
// The minimum number of players that must participate in a map in order for it
// to count towards each player's player rating. 
// Default is 8 (e.g. 4v4) 
set g_playerRating_minplayers 8

// g_teamForceBalance_playerrating [0..100]
// Set to 0 to disable. If this setting is enabled, it overrides
// g_teamForceBalance. If g_teamForceBalance_playerrating is non-zero, etpub will
// not allow players to join a team whose chances of winning are already above
// g_teamForceBalance_playerrating The winning chance is calculated using 3
// things: the average player rating of the team, the number of players on each
// team, and how often each team wins the current map (e.g. Allies usually win 
// tc_base). If the team being joined rates too highly, a message will tell the
// player to join the other team.
//
// Important Notes:
//
// First of all, g_teamForceBalance_playerrating WILL allow unbalanced numbers
// to offset map or team difficulty. If the Axis has VERY good players, it will
// allow the Allies to have a few more players than Axis, given a map that is
// equally difficult for both sides to win. Also, given teams equal in skill,
// g_teamForceBalance_playerrating will force Allies to have a large team if
// the map is almost always won by Axis.
// 
// Because g_teamForceBalance_playerrating uses info tracked over time, it may
// be best to run through your cycle or campaign a few times without it before
// turning it on, so that it can learn how good the players are, and how hard
// the maps are.
//
// If you want an idea why it's working a certain way, use the !listteams
// command in the console or game. This will show you how many points each team
// is predicted to win. If a team is going to win less than 4 points, it's too
// good.
// 
// Ratings       Win Prob       Win Points
// ---------------------------------------------
// Allies          0.65            5
// Axis            0.35           10
// 
// The above says that Axis has a 35% chance of winning based on the players and
// map. It takes into account the number of players per team also. The points
// are calculated as 16*(1 - win prob). So there you have it.
// 
// Remember, g_teamForceBalance_playerrating is contantly adapting, so if it
// seems dumb at first, give it some time to adapt to your server.
//
// See also g_ATB
// See also !listteams. 
//
// Recommended Setting when used: 60
// [Default: 0]
set g_teamForceBalance_playerrating 0

// g_stats [integer]
// This is a bitflag cvar used to control the way statistics are handled. The
// following flags are supported:
// 1 - When shooting a corpse to gib, do not count it as a hit.
// 2 - When shooting a corpse to gib, do not count it as a shot.
// Set this to 3 to use the behaviour of etmain and shrubet.
// [Default: 0]
set g_stats 0

// g_tyranny [0|1]
// This cvar controls the use of administrator commands that could be used by
// admins to cheat or abuse players. If it is set to 0 you will not be able to
// use commands on your server such as !gib, !slap, !burn, etc.
// Also, you will not be able to use g_logOptions flag 256 (log private
// messages) unless g_tyranny is enabled.
// g_tyranny must also be enabled in order to specify a client in using the
// 'playsound' server command.
// 'g_tyranny' and its value appear in the serverInfo string to serve as a
// warning for perspective players.
// NOTE: If you enable this, you MUST do so immediately when the server starts
// (before the first map is loaded). This means putting
// set g_tyranny 1
// in the .cfg file that is exec'ed on server start. If you try to change this
// on a running server, you will get the message:
// g_tyranny is read only.
// [Default: 0]
set g_tyranny 0

// g_mapScriptDirectory [string]
// Similar to ETPro's b_mapscriptsdirectory. Set it to the name of a directory
// in your fs_path that contains custom map scripts.
// For example you can copy the 'etpromapscripts' directory from the ETPro
// distribution to your 'etpub' directory and add:
// set g_mapScriptDirectory "etpromapscripts"
// to your cfg.
// Setting this to "" disables it.
// [Default: ""]
set g_mapScriptDirectory ""

// g_campaignFile [string]
// Similar to ETPro's b_campaignFile. If you set this to the name of a file in
// your fs_path it will be interpreted as a .campaign script and all other
// .campaign scripts in your pk3 files will be ignored.
// This is useful for making custom campaigns since you don't need to offer a
// pk3 file containing a custom .campaign script for all clients to download.
// However, if the client has not downloaded this .campaign file in a pk3, they
// will not see information about the campaign. Such information includes:
// * Will not display in the VOTE -> MAP list
// * Map locations will not draw on the map of Europe.
// * Campaign description will not draw in the right panel
// * Total number of maps and current maps order in the campaign will not be
//   shown in the intermission screens.
// Also, even though the built-in campaigns cmpgn_centraleurope and
// cmpgn_northafrica will not be valid, they will still appear in the client's
// VOTE -> MAP menu. If a vote for one of them passes, nothing will happen.
// Setting this to "" disables it.
// [Default: ""]
set g_campaignFile ""

// vote_allow_surrender [1|0]
// vote_allow_nextcampaign [1|0]
// vote_allow_restartcampaign [1|0]
// vote_allow_poll [1|0]
// vote_allow_shufflenorestart [1|0]
// Cvars that restrict the rights of players to use the respective /callvote
// command.
// [Default for all: 1]
set vote_allow_surrender 1
set vote_allow_nextcampaign 1
set vote_allow_restartcampaign 1
set vote_allow_poll 1
set vote_allow_maprestart 1
set vote_allow_shufflenorestart 1

// g_fear [integer]
// If a player uses the /kill command within g_fear milliseconds after taking
// damage from an enemy, the attacker that last damaged that player will recieve
// full credit for the kill and the mode of death will be recorded as MOD_FEAR.
// Other restrictions are that the attacker must be on the opposite team and the
// attacker must still be alive.
// In-game statistics will reflect that the death was caused by the weapon that
// did the last recorded damage to the player.
// Set this to 0 to disable this behaviour.
// [Default: 2000]
set g_fear 2000

// g_msgs [integer]
// The duration, in seconds, between messages displayed to all users.  Set
// messages by setting the g_msg1, g_msg2, g_msg3 . . . g_msgX cvars. These
// must be set consecutively, the first blank or missing number in the order
// will cycle the message back to the first message
// [Default: 0]
set g_msgs 0

// g_msgX [string]
// Sets the banners/messages to be displayed to all users, needs g_msgs set
// to positive value.  Also set g_msgpos for appropriate placement of banner
// X must be consecutively numbered, they will reset to banner 1 when it
// encounters a blank or missing number
//set g_msg1 "Banner 1"
//set g_msg2 "Banner 2"

// g_msgpos [integer]
// The locations of messages, if g_msgs is non-zero, and g_msgX cvars are set
// 0 - Chat area (default)
// 1 - Center screen
// 2 - Left notification area
// [Default: 0]
set g_msgpos 0

// g_obituary [integer]
// This cvar controls how player Obituaries are handled. Obituarys are the
// messages normally printed in the cpm space with a skull next to them to
// notify all players of another player's death.
// Available options are:
// 0 - Obituaries are disabled.
// 1 - All Obituaries will ALWAYS be handled by the client with the EV_OBITUARY
//     event. Since the etmain client does not know about some etpub MODs (e.g.
//     MOD_GOOMBA) the default message will be printed for those deaths.
// 2 - Only those Obituaries that the etmain client knows how to handle will be
//     handled by the client. If someone is killed by a MOD that the etmain
//     client doesn't know about, the Obituary is generated by the server.
// 3 - All Obituaries are handled by the server and the EV_OBITUARY event is
//     never sent to the client. This results in "Instant Obituaries". This
//     comes at the cost of increased network bandwidth and absence of the skull
//     icon in the obituaries.
// See also g_logOptions.
// [Default: 2]
set g_obituary 2

// g_throwableKnives [integer]
// Number of throwing knives player starts with.  Set to zero to disable.
// Player throws a knife with the /throwknife command.  Use the /knives
// command to see how many knives you have left.
// Requires etpub_client >= 20050927 or /weapons/knife.weap in a pk3
// downloaded to the client
// [Default: 0]
set g_throwableKnives 0

// g_maxKnives [integer]
// Maximum number of knives a player can hold
// additional knives can be picked up from the ground
// [Default: 5]
set g_maxKnives 5

// g_knifeDamage [integer]
// Maximum amount of damage a thrown knife will cause to enemy.
// Actual amount of damage is random, with this as a max value.
// [Default: 35]
set g_knifeDamage 35

// g_throwKnifeWait [integer]
// How many seconds a player must wait between knife throws
// [Default: 2]
set g_throwKnifeWait 2

// g_constructibleXPSharing [1|0]
// When multiple engineers help build a constructible, each gets his share of XP
// once the constructible is build.  The share of gainex XP is proportional to
// how much the engineer built.
// [Default: 0]
set g_constructibleXPSharing 0

// g_asblock [integer]
// Airstrike blocking.
// Available options are:
// 1 - Make an announcement whenever an airstrike is blocked.
// 2 - A player may easily block an airstrike by crouching, standing, or proning
// over the enemy's canister to block the airstrike.
// 4 - Reserved.
// 8 - Lvl 3 FieldOPs and higher cannot have the airstrikes blocked by players.
// [Default: 0]
set g_asblock 0

//g_panzersVulnerable [0|1] 
// If set to 1, panzers that are shot in mid-air will explode.
// If party panzers are on, nearby panzers will explode as well
// due to splash damage.
// [Default: 0]
set g_panzersVulnerable 0

// g_panzersSpeed [integer]
// Speed of the panzers (Applies to normal and party panzers).
// Normal panzer speed is 2500.
// [Default: 2500]
set g_panzersSpeed 2500

// g_panzersGravity [integer] 
// If set to 1, panzer trajectory will be affected by gravity
// (Applies to normal and party panzers).
// [Default: 0]
set g_panzersGravity 0

// g_realHead [0|1]
// Head Box Positions
// Available options are:
// 0 - Regular headbox positions.
// 1 -  Server tracks the animations so the headbox will match the playermodels
// exactly. This is the recommended value.
// This code was originally from ETPro (b_realhead). It was contributed by
// zinx and added to etpub by forty.
// [Default: 1]
set g_realHead 1 

// g_dyno [bitmask]
// Dynamite Behaviour
// Available options are:
// 1 - Sudden Death Dynamites enabled. If there is 30 seconds or less on the
// clock and dynamite is planted on an objective, the clock will continue to
// run past zero. The match will not end until the dynamite either explodes, or
// is disarmed. You are not allowed to plant additional dynamite during sudden
// death.
// 2 - Dynamite chaining enabled. Dynamite will cause other similar dynamites to
// explode when exploding. Dynamites not planted on an objective will blow any
// other dynamite not on an objective. Dynamite planted on an objective will
// only blow dynamite on the same objective.
// [Default: 0]
set g_dyno 0

// g_canisterKick [integer]
// Canister and grenade kicking.
// Allows players to kick smoke, and air strike canisters, along with grendaes.
// The integer adjust the amount of force put behind the kick. 75 is a good
// value, anything below 60 is about useless, and above about 125 is probably
// too much.
// [Default: 0]
set g_canisterKick 0

// g_obit*** [string]
// Custom obituaries.  See obituaries.html for a complete discussion on custom
// obituaries.

// g_killingSpree [integer]
// This is the number of consecutive kills or deaths a player must accumulate
// before a spree message is printed.
// For example, if g_killingspree 5 is set, a player will receive kill spree or
// death messages at 5, 10, 15, 20, etc, in a row.
// If g_misc flag 8 is set, a top 3 three killing spree message will print every
// minute, and a map best killing spree will print every two minutes.
// Set this to 0 to disable spree messages
// [Default: 0]
set g_killingSpree 0

// g_killingSpreePos [integer]
// Controls the location of killing spree messages on the client
// 0 - Display messages in chat area
// 1 - Display messages in center display area
// 2 - Display messages in left-center display area
// [Default: 0]
set g_killingSpreePos 0

// g_killingSpreeMsg* [string]
// The following cvars control the killing spree messages that the server
// prints when using g_killingSpree.
set g_killingSpreeMsg_end "[n]^8's killing spree came to an end after ^7[k] ^8kills."
set g_killingSpreeMsg_tk "[n]^8's killing spree was stopped by a ^1TEAMKILL^8 after ^7[k] ^8kills!"
set g_killingSpreeMsg_futility "[n] ^8seems to be having a bad day... ^7[d] ^8deaths without a kill!"

// g_killingSpreeMsg_default
// This is the default message displayed for killing sprees.
// Levels of killing sprees not defined by g_killingSpreeMsg_X cvars will use
// this default message
set g_killingSpreeMsg_default "[n] ^8is on a killing spree! ^7[k] ^8kills without a death!"

// g_killingSpreeMsg_X
// These cvars describe the various levels of killing sprees.
// A level is defined by the value of g_killingSpree. 
// For example, if g_killingSpree 5 is set, level 1 is 5 kills, level 2 is 10 kills, etc.
// You can define as many or as few levels as you want.
// Any levels that are not defined will display g_killingSpreeMsg_default.
set g_killingSpreeMsg_1 "[n] ^8is on a killing spree! ^7[k] ^8kills without a death!"
set g_killingSpreeMsg_2 "[n] ^8is a killing machine! ^7[k] ^8kills without a death!"
set g_killingSpreeMsg_3 "[n] ^8is on a rampage! ^7[k] ^8kills without a death!"
set g_killingSpreeMsg_4 "[n] ^8is dominating! ^7[k] ^8kills without a death!"
set g_killingSpreeMsg_5 "[n] ^8is invincible! ^7[k] ^8kills without a death!"

// g_dmgKnife [integer]
// Amount of damage done by the knife.
// [Default: 10]
set g_dmgKnife 10

// g_dmgSten [integer]
// Amount of damage done by the sten.
// [Default: 14]
set g_dmgSten 14

// g_dmgFG42 [integer]
// Amount of damage done by the FG-42
// [Default: 15]
set g_dmgFG42 15

// g_dmgPistol [integer]
// Amount of damage done by by pistol weapons
// [Default: 18]
set g_dmgPistol 18

// g_dmgSMG [integer]
// Amount of damage done by the SMG weapoins (MP40 and Thompson).
// [Default: 18]
set g_dmgSMG 18

// g_dmgMG42 [integer]
// Amount of damage done by the MG42.
// [Default: 18]
set g_dmgMG42 18

// g_dmgMG [integer]
// Amount of damage done by an emplaced MG.
// [Default: 20]
set g_dmgMG 20

// g_dmgFG42Scope [integer]
// Amount of damage done by the FG-42 when scoped.
// [Default: 30]
set g_dmgFG42Scope 30

// g_dmgInfRifle [integer]
// Amount of damage done by unscoped rifles (K43 and Garand).
// [Default: 34]
set g_dmgInfRifle 34

// g_dmgSniper [integer]
// Amount of damage done by a scoped Garand or K43.
// [Default: 50]
set g_dmgSniper 50

// g_dmgFlamer [integer]
// Amount of damage done, per tick, by a flamethrower.
// Also controls the per-tick damage done to a player who
// has been set on fire by a flamethrower and is still 
// burning.
// [Default: 5]
set g_dmgFlamer 5

// Exploding Weapon Damage & Radius CVARs
// Traditional ET sets the blast radius to match the damage amount
// for all exploding weapons, save the panzerfaust radius
// which was hardwired to 300.  

// g_dmgGrenade [integer]
// Amount of damage done by a grenade
// [Default: 250]
set g_dmgGrenade 250

// g_dmgGrenadeRadius [integer]
// Blast radius of a grenade
// [Default: 250]
set g_dmgGrenadeRadius 250

// g_dmgGLauncher [integer]
// Amount of damage done by an engineer's grenade-launcher grenades
// [Default: 250]
set g_dmgGLauncher 250

// g_dmgGLauncherRadius [integer]
// Blast radius of an engineer's grenade-launcher grenades
// [Default: 250]
set g_dmgGLauncherRadius 250

// g_dmgLandmine [integer]
// Amount of damage done by a landmine
// [Default: 250]
set g_dmgLandmine 250

// g_dmgLandmineRadius [integer]
// Blast radius of a landmine
// [Default: 250]
set g_dmgLandmineRadius 250

// g_dmgSatchel [integer]
// Amount of damage done by a satchel
// [Default: 250]
set g_dmgSatchel 250

// g_dmgSatchelRadius [integer]
// Blast radius of a satchel
// [Default: 250]
set g_dmgSatchelRadius 250

// g_dmgPanzer [integer]
// Amount of damage done by a panzerfaust rocket
// [Default: 400]
set g_dmgPanzer 400

// g_dmgPanzerRadius [integer]
// Blast radius of a panzerfaust rocket
// [Default: 300]
set g_dmgPanzerRadius 300

// g_dmgMortar [integer]
// Amount of damage done by a mortar round
// [Default: 400]
set g_dmgMortar 400

// g_dmgMortarRadius [integer]
// Blast radius of a mortar round
// [Default: 400]
set g_dmgMortarRadius 400

// g_dmgDynamite [integer]
// Amount of damage done by dynamite
// [Default: 400]
set g_dmgDynamite 400

// g_dmgDynamiteRadius [integer]
// Blast radius of dynamite
// [Default: 400]
set g_dmgDynamiteRadius 400

// g_dmgAir [integer]
// Amount of damage done PER BOMB by an airstrike
// [Default: 400]
set g_dmgAir 400

// g_dmgAirRadius [integer]
// Blast Radius PER BOMB of an airstrike
// [Default: 400]
set g_dmgAirRadius 400

// g_dmgArty [integer]
// Amount of damage done PER BOMB by Artillery fire
// Note: if this value is non-zero, the spotting round 
// will follow normal ET behavior (can do damage, but to a 
// (VERY small radius, making damage unlikely)
// [Default: 400]
set g_dmgArty 400

// g_dmgArtyRadius [integer]
// Blast Radius PER BOMB of Artillery fire
// Note: if this value is non-zero, the spotting round 
// will follow normal ET behavior (can do damage, but to a 
// (VERY small radius, making damage unlikely)
// [Default: 400]
set g_dmgArtyRadius 400

// g_dmg [bitmask]
// Enables experimental advanced combat options
// Available options are: 
//  0 - Use traditional ET settings for combat.
//  1 - Use Advanced Hit Locations: Differentiates between
//     Head, Body, Arm, and Leg shot when computing damage
//  2 - Applies a more realistic damage vs. range
//	 equation for short-ranged weapons. This will reduce the 
//	 effectiveness of these weapons at longer ranges. 	 
//  4 - Gives a damage bonus to short-range weapons when used 
//	 in close combat situations.  This will increase the effectiveness
//	 of these weapons at closer ranges.
//  8 - Use bullet fall-off approximations when computing
//       shot trajectory.
// 16 - Improve accuracy of non-scoped single-shot rifles
// 32 - Use alternate bullet-spread characteristics for 
//        automatic or rapid-fire weapons.
// 64 - Damage caused by players who are spectators or have disconnected
// 	  is ignored (XP is not awarded).
// [default: 0]
set g_dmg 0

// g_dmgHeadShotMin [Integer]
// This represents the minimum damage done by a headshot
// regardless of the weapon used to make the shot.  
// Headshots that would do damage below this value will be
// adjusted upward to equal g_dmgHeadshotMin.
// Headshots from a weapon with damage at or above this value 
// will do a multiple of their damage, as specified by g_dmgHeadShotRatio.
// (The actual damage may undergo additional modification
// due to range and other conditions)
// [default: 50]
set g_dmgHeadShotMin 50

// g_dmgHeadShotRatio [float]
// This specifies the multiplier used for headshots that do
// damage ABOVE g_dmgHeadShotMin.
//
// [default 2.0]
set g_dmgHeadShotRatio 2.0

// g_reflectFriendlyFire [float]
// Similar to Shrub's g_friendlyfire 2 cvar
// A multiplier value that determines how much friendly-fire damage, 
// if any, is reflected back to the player that caused the damage.
// This setting is independent of g_friendlyfire, so damage can be 
// set to reflect on both FF and non-FF servers.
// A value of 1.0 would reflect full damage.
// A value of 0.5 would reflect half damage.
// Set to 0 to disable reflected friendly fire.
// [default: 0]
set g_reflectFriendlyFire 0

// g_reflectFFWeapons [bitmask]
// Selects which category of weapon will reflect when 
// g_reflectFriendlyFire is non-zero.
// Note: Setting this value to zero will override any multiplier
// set via g_reflectFriendlyFire, effectively disabling reflecting damage.
// Available options are:
//   1 - Enable reflected damage for Firearms (all types of guns)
//   2 - Enable reflected damage for Grenades and grenade launchers
//   4 - Enable reflected damage for Knives (includes thrown knives)
//   8 - Enable reflected damage for Panzers
//  16 - Enable reflected damage for Flamethrowers
//  32 - Enable reflected damage for Mortars
//  64 - Enable reflected damage for Satchel Charges
// 128 - Enable reflected damage for Artillery and Air Strikes
// 256 - Enable reflected damage for Dynamite and Construction Damage
// 512 - Enable reflected damage for Landmines
// [default: 31 (Firearms + Grenades + Knives + Panzers + Flamers)]
set g_reflectFFWeapons 31

// g_friendlyFireOpts [bitmask]
// Allows greater control over friendly fire events.
// Available options are:
//   1 - Landmines ALWAYS damage teammates regardless of g_friendlyfire setting
//   2 - Allow 'grenade boosting' when friendly fire is off.
//   4 - Non-engineer players do not trigger landmines on their own team.
// [default: 0]
set g_friendlyFireOpts 0

// team_maxMedics [string]
// team_MaxEngineers [string]
// team_maxFieldOps [string]
// team_maxCovertOps [string]
// Limit the number of players that play a specific class / team
// Can be a hard value such as 5, or can be a percentage such as "15%"
// Set to -1 to disable any limits
// [Default: -1]
set team_maxMedics -1
set team_maxEngineers -1
set team_maxFieldOps -1
set team_maxCovertOps -1

// g_staminaRecharge [float]
// Multiplies the rate at which stamina is rebuilt. Setting this
// value to zero will cause players to not regain any stamina once it is used
// except through the use of adrenalin.
// Setting this value is recommended only if you have etpub client versions
// 20050927 or later.
// [Default: 1.0]
set g_staminaRecharge 1.0

// g_shortcuts [0|1] 
//Turns on the replacement of the following keys in say messages 
// [a] - last player who gave you ammo
// [d] - last player who killed you
// [h] - last player who gave you health
// [k] - last player you killed
// [l] - your location (letter,number)
// [n] - your name
// [r] - last player who revived you
// [p] - last player you looked at
// [s] - health remaining
// [w] - name of current weapon
// [t] - ammo for current weapon
// [Default: 0]
set g_shortcuts 0

// *****************************************************************************
// * Final ET Settings/Commands (non-ETPub mod) ********************************
// *****************************************************************************

// MAP ROTATION SCRIPT

exec campaigncycle.cfg              // Campaign mode
//exec objectivecycle.cfg           // Objective mode
//exec lmscycle.cfg                 // Last Man Standing mode
//exec stopwatchcycle.cfg           // Stopwatch mode

// WATCHDOG

// in case the game dies with an ERR_DROP
// or any situation leading to server running with no map
set com_watchdog 60
set com_watchdog_cmd "exec campaigncycle.cfg"
